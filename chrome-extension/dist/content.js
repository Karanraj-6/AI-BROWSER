const waitForElement=async(e,s=5e3)=>{const n=performance.now();for(;performance.now()-n<s;){const t=document.querySelector(e);if(t)return t;await new Promise(c=>setTimeout(c,200))}return null},handleAction=async action=>{switch(action.type){case"CLICK":{const e=await waitForElement(action.selector,5e3);return e?(e.click(),{success:!0}):{success:!1,error:"selector-not-found"}}case"FILL":{const e=await waitForElement(action.selector,5e3);return e?"value"in e?(e.focus(),e.value=action.value,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),{success:!0}):{success:!1,error:"unsupported-element"}:{success:!1,error:"selector-not-found"}}case"EVALUATE_SCRIPT":{const result=eval(action.code);return{success:!0,result}}default:return{success:!1,error:`unsupported-action:${action==null?void 0:action.type}`}}};chrome.runtime.onMessage.addListener((e,s,n)=>{if((e==null?void 0:e.type)==="CONTENT_ACTION")return Promise.resolve(handleAction(e.payload)).then(t=>n(t)).catch(t=>n({success:!1,error:(t==null?void 0:t.message)??String(t)})),!0});
